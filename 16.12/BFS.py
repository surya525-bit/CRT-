'''n=10
l=[[0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,],[0,0,1,0,0,0,0,0,0,0]]
visit=[0]*n
exp=[]
k=0
for i in range(n):
    for j in range(n):
        if(l[k][j]==1 and visit[j]==0):
            exp.append(j)
    print(k)
    visit[k]=1
    if(len(exp)!=0):
        k=exp[0]
        exp.pop(0)'''

'''n=10
l=[[0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,],[0,0,1,0,0,0,0,0,0,0]]
visit=[0]*n
exp=[]
k=0
for i in range(n):
    for j in range(n):
        if(l[k][j]==1 and visit[j]==0):
            exp.append(j)
    print(k)
    visit[k]=1
    if(len(exp)!=0):
        k=exp[0]
        exp.pop(0)'''

n=10
l=[0]*n
f=-1
r=-1
def Enqueue(data,f,r):
    if(r==n-1):
        if((r+1)%n<f):
            l[(r+1)%n]=data
            r=(r+1)%n
        else:
            print("OverFlow")
    else:
        if((r+1)!=f):
            r=r+1
            l[r]=data
    return r
def Dequeue(f,r):
    if(f==-1):
        print("UnderFlow")
    else:
        l[f]=0
        f=f+1
        if(f==n):
            f=0
    if((f-1)==r):
        f=-1
    return f
m=[[0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,],[0,0,1,0,0,0,0,0,0,0]]
visit=[0]*n
k=0
for i in range(n):
    for j in range(n):
        if(m[k][j]==1 and visit[j]==0):
            r=Enqueue(j,f,r)
            visit[j]=1
            if(f==-1 and r==0):
                f=0
    print(k)
    visit[0]=1
    if(f!=-1):
        k=l[f]
        f=Dequeue(f,r)
    if(f==-1):
        r=-1
        

    
    

        

    
    
